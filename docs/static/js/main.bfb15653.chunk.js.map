{"version":3,"sources":["components/AddCategory.js","helpers/getMovies.js","components/DescriptionMovie.js","components/Stars.js","components/ContentCard.js","components/MoviesGridItem.js","components/MoviesGrid.js","hooks/useFetchMovies.js","components/SelectByStars.js","components/MoviesApp.js","index.js","images/noimage.png"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","getMovies","category","a","fetch","resp","json","results","movies","map","movie","id","title","url","popularity","poster","poster_path","descr","overview","vote","vote_average","starMin","starMax","encodeURI","DescriptionMovie","n","className","onClick","document","getElementById","style","display","Stars","ContentCard","urlFull","src","alt","MoviesGridItem","noimage","console","log","MoviesGrid","state","setState","useEffect","then","imgs","useFetchMovies","key","SelectByStars","handleInputChange","MoviesApp","categories","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.bfb15653.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length >0) {\r\n            setCategories( cats => [ inputValue ]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"Text\"\r\n                value= { inputValue }\r\n                onChange={ handleInputChange }\r\n                placeholder='Select yours movies here'\r\n            />\r\n        </form>\r\n    )\r\n}\r\n","\r\nexport const getMovies = async( category ) =>{\r\n\r\n    if ( category === 'Movies Suggested') {\r\n        const url = `https://api.themoviedb.org/3/discover/movie?api_key=ce4ee431c75143ac4b030f105376623b&sort_by=popularity.desc`;\r\n        const resp = await fetch( url );\r\n        const { results } = await resp.json();\r\n\r\n        const movies = results.map( movie => {\r\n            return{\r\n                id: movie.id,\r\n                title: movie.title,\r\n                url: 'https://image.tmdb.org/t/p/w200',\r\n                popularity: movie.popularity,\r\n                poster: movie.poster_path,\r\n                descr: movie.overview,\r\n                vote: movie.vote_average            \r\n            }  \r\n            \r\n        })\r\n\r\n        return movies;\r\n        \r\n    }else{\r\n        \r\n        if (category === '1 Star' || category ==='2 Stars' || category ==='3 Stars' || category ==='4 Stars' || category ==='5 Stars') {\r\n\r\n            let starMin=8;\r\n            let starMax=10;\r\n\r\n            switch (category) {\r\n                case '1 Star':\r\n                    starMin=0;\r\n                    starMax=1.99;\r\n\r\n                    break;\r\n                case '2 Stars':\r\n                    starMin=2;\r\n                    starMax=3.99;\r\n\r\n                    break;                    \r\n                case '3 Stars':\r\n                    starMin=4;\r\n                    starMax=5.99;\r\n\r\n                    break;                    \r\n                case '4 Stars':\r\n                    starMin=6;\r\n                    starMax=7.99;\r\n\r\n                    break;                    \r\n                default:\r\n                    starMin=8;\r\n                    starMax=10;\r\n                    \r\n                    break;                    \r\n            }\r\n            const url = `https://api.themoviedb.org/3/discover/movie?api_key=ce4ee431c75143ac4b030f105376623b&sort_by=vote_average.desc&vote_average.gte=${ starMin }&vote_average.lte=${ starMax }&vote_count.gte=1`;\r\n            const resp = await fetch( url );\r\n            const { results } = await resp.json();\r\n\r\n            const movies = results.map( movie => {\r\n            return{\r\n                id: movie.id,\r\n                title: movie.title,\r\n                url: 'https://image.tmdb.org/t/p/w200',\r\n                popularity: movie.popularity,\r\n                poster: movie.poster_path,\r\n                descr: movie.overview,\r\n                vote: movie.vote_average            \r\n            }   \r\n            \r\n            })\r\n            return movies;\r\n        } else {\r\n            const url = `https://api.themoviedb.org/3/search/movie?api_key=ce4ee431c75143ac4b030f105376623b&query=${ encodeURI(category) }`;\r\n            const resp = await fetch( url );\r\n            const { results } = await resp.json();\r\n\r\n            const movies = results.map( movie => {\r\n            return{\r\n                id: movie.id,\r\n                title: movie.title,\r\n                url: 'https://image.tmdb.org/t/p/w200',\r\n                popularity: movie.popularity,\r\n                poster: movie.poster_path,\r\n                descr: movie.overview,\r\n                vote: movie.vote_average            \r\n            }   \r\n            \r\n        })\r\n        return movies;\r\n        }\r\n        \r\n    }\r\n}","import React from 'react'\r\n \r\nexport const DescriptionMovie = ( { n, descr } ) => {\r\n    \r\n    const learnMore = () => {\r\n        document.getElementById( n ).style.display = \"block\";\r\n        document.getElementById(\"more\"+n).style.display = \"none\";\r\n    };\r\n\r\n    const learnLess = () => {\r\n        document.getElementById( n ).style.display = \"none\";\r\n        document.getElementById(\"more\"+n).style.display = \"block\";\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            <button id={\"more\"+n} className=\"more\" onClick={ learnMore }>Learn more...</button>  \r\n            <div id={ n } className=\"description\">\r\n                { descr }\r\n                <button className=\"less\" onClick={ learnLess}>Learn less...</button>  \r\n            </div>\r\n            \r\n        </>\r\n    )\r\n        \r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport const Stars = ( {vote} ) => {\r\n    return (\r\n        <p className=\"stars\">★ {vote}</p>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { DescriptionMovie } from './DescriptionMovie';\r\nimport { Stars } from './Stars';\r\n\r\nlet n=0;\r\n\r\nexport const ContentCard = ({ title, urlFull, descr, vote}) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={ urlFull } alt={ title } />\r\n            <h4> { title } </h4>\r\n            <Stars vote={ vote/2 }/>\r\n            <DescriptionMovie \r\n                descr={ descr }\r\n                n={n++}{...n}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { ContentCard } from './ContentCard';\r\nimport noimage from '../images/noimage.png';\r\n\r\n\r\nexport const MoviesGridItem = ( { title, url, poster, urlFull, popularity, descr, vote} ) => {\r\n\r\n    if(descr === ''){\r\n        descr = 'No overview found.';\r\n    }\r\n\r\n    if (poster === null) {\r\n        urlFull= noimage;\r\n    } else{\r\n        urlFull = url+poster;\r\n    }\r\n\r\n    console.log( title, popularity);\r\n    return (\r\n        <ContentCard\r\n            title={ title }\r\n            descr={ descr }\r\n            vote={ vote }\r\n            urlFull= { urlFull }\r\n        />\r\n    )\r\n}","import React from 'react';\r\n\r\nimport { useFetchMovies } from '../hooks/useFetchMovies';\r\nimport { MoviesGridItem } from './MoviesGridItem';\r\n\r\n\r\nexport const MoviesGrid = ({ category }) => {\r\n\r\n    const { results } = useFetchMovies( category );\r\n\r\n        return (    \r\n        <>\r\n            <h3 >{ category }</h3>\r\n            <div className=\"card-grid\">\r\n            \r\n                {\r\n                    results.map( movie => (\r\n                        <MoviesGridItem \r\n                            key={ movie.id }\r\n                            { ...movie }\r\n                        />\r\n                    )) \r\n                }\r\n            \r\n            </div>\r\n        </>       \r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getMovies } from '../helpers/getMovies';\r\n\r\nexport const useFetchMovies = ( category ) =>{\r\n\r\n    const [state, setState] = useState({\r\n        results: [],\r\n    });\r\n\r\n    useEffect( () =>{\r\n        \r\n        getMovies( category )\r\n            .then( imgs => {\r\n                 \r\n                setState({\r\n                    results: imgs\r\n                });\r\n\r\n            })\r\n            \r\n    }, [category])\r\n\r\n    return state;\r\n\r\n}","import React, {useState} from 'react'\r\n\r\nexport const SelectByStars = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        setCategories( cats => [ inputValue ]);\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit } className=\"selectStars clasification\">\r\n            <h2 className='titleStars'> Select yours movies by stars </h2>\r\n            <button \r\n                onClick={ () => setInputValue('5 Stars')}\r\n                onChange={ handleInputChange }> ★ </button>\r\n            <button \r\n                onClick={ () => setInputValue('4 Stars')}\r\n                onChange={ handleInputChange }> ★ </button>    \r\n            <button \r\n                onClick={ () => setInputValue('3 Stars')}\r\n                onChange={ handleInputChange }> ★ </button>\r\n            <button\r\n                onClick={ () => setInputValue('2 Stars')}\r\n                onChange={ handleInputChange }> ★ </button>\r\n            <button \r\n                onClick={ () => setInputValue('1 Star')}\r\n                onChange={ handleInputChange }> ★ </button>           \r\n        </form>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './AddCategory'\r\nimport { MoviesGrid } from './MoviesGrid';\r\nimport { SelectByStars } from './SelectByStars';\r\n\r\nexport const MoviesApp = () =>{\r\n\r\n    const [categories, setCategories] = useState(['Movies Suggested'])\r\n    return (\r\n        <>\r\n            <div className=\"header\">\r\n                <h2> Your Local Movie Theater </h2>\r\n                {<AddCategory setCategories={ setCategories }/>}\r\n                {<SelectByStars setCategories={ setCategories }/>}\r\n            </div>\r\n            { <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <MoviesGrid   \r\n                            key={ category }\r\n                            category={ category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol> }\r\n        </>\r\n    );\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MoviesApp } from './components/MoviesApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <MoviesApp />,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"./static/media/noimage.57aef36f.png\";"],"sourceRoot":""}